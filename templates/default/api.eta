<%
const { apiConfig, routes, utils, config } = it;
const { info, servers } = apiConfig;
const { _, require, formatDescription } = utils;

const server = (servers && servers[0]) || { url: "" };

const descriptionLines = _.compact([
  `@title ${info.title || "No title"}`,
  info.version && `@version ${info.version}`,
  server.url && `@baseUrl ${server.url}`,
  info.description && _.replace(formatDescription(info.description), /\n/g, "\n * "),
]);

%>
<% if (descriptionLines.length) { %>
/**
<% descriptionLines.forEach((descriptionLine) => { %>
* <%~ descriptionLine %>

<% }) %>
*/
<% } %>
export class Api<SecurityDataType extends unknown><% if (!config.singleHttpClient) { %> extends HttpClient<SecurityDataType> <% } %> {

<% if(config.singleHttpClient) { %>
  constructor (private http: HttpClient<SecurityDataType>) {}
<% } %>


<% routes.outOfModule && routes.outOfModule.forEach((route) => { %>

        <%~ includeFile('./procedure-call.eta', { route, utils, config }) %>

<% }) %>

<% routes.combined && routes.combined.forEach(({ routes = [], moduleName }) => { %>
    <%~ moduleName %> = {
    <% routes.forEach((route) => { %>

        <%~ includeFile('./procedure-call.eta', { route, utils, config }) %>

    <% }) %>
    }
<% }) %>
}
