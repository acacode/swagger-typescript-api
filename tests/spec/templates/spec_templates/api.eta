
<% if (it.apiConfig.hasDescription) { %>
/**
<% it.apiConfig.description.forEach((jsDocLine) => { %>
* <%~ jsDocLine %>

<% }) %>
*/
<% } %>
export class Api<<%~ it.apiConfig.generic.map(g => `${g.name} = ${g.defaultValue}`).join(', ') %>> extends HttpClient<<%~ it.apiConfig.generic.map(g => g.name).join(', ') %>>{
<%
/* TODO: outOfModule, combined should be attributes of route, which will allow to avoid duplication of code */
%>

<% it.routes.outOfModule && it.routes.outOfModule.forEach(({ name, comments = [], routeArgs = [], returnType, errorReturnType, requestMethodContent }) => { %>

    /**
    <% comments.forEach((jsDocLine) => { %>
    * <%~ jsDocLine %>

    <% }) %>
    */
    <%~ name %> = (
        <% routeArgs.forEach(({ name, optional, type }) => { %>
            <%~ optional ? `${name}?` : name %>: <%~ type %>,
        <% }) %>) =>
    this.request<<%~ returnType %>, <%~ errorReturnType %>>(<%~ requestMethodContent %>)
<% }) %>

<% it.routes.combined && it.routes.combined.forEach(({ routes = [], moduleName }) => { %>
    <%~ moduleName %> = {
    <% routes.forEach(({ name, comments = [], routeArgs = [], returnType, errorReturnType, requestMethodContent }) => { %>

        /**
        <% comments.forEach((jsDocLine) => { %>
        * <%~ jsDocLine %>

        <% }) %>
        */
        <%~ name %>: (
        <% routeArgs.forEach(({ name, optional, type }) => { %>
            <%~ optional ? `${name}?` : name %>: <%~ type %>,
        <% }) %>) =>
        this.request<<%~ returnType %>, <%~ errorReturnType %>>(<%~ requestMethodContent %>),
    <% }) %>
    }
<% }) %>
}