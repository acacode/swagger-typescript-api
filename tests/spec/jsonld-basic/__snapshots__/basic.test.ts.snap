// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`JSON-LD basic test > should generate JSON-LD types correctly 1`] = `
[
  {
    "fileContent": "

  /** JSON-LD Entity: Person */
  export interface Person {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: {
  /**
   * name
   * Property: name
   */
    name?: string,
  /**
   * email
   * Property: email
   */
    email?: string,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: ,

},
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * email
   * Property: email
   */
    email?: Record<string,any>,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: Organization */
  export interface Organization {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: string,
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * url
   * Property: url
   */
    url?: Record<string,any>,
  /**
   * employees
   * Property: employees
   */
    employees?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: JsonLdEntity */
  export interface JsonLdEntity {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
}

",
    "fileExtension": ".ts",
    "fileName": "Api",
  },
]
`;

exports[`JSON-LD basic test > should generate JSON-LD types with strict typing 1`] = `
[
  {
    "fileContent": "

  /** JSON-LD Entity: Person */
  export interface Person {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: {
  /**
   * name
   * Property: name
   */
    name?: string,
  /**
   * email
   * Property: email
   */
    email?: string,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: ,

},
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * email
   * Property: email
   */
    email?: Record<string,any>,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: Organization */
  export interface Organization {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: string,
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * url
   * Property: url
   */
    url?: Record<string,any>,
  /**
   * employees
   * Property: employees
   */
    employees?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: JsonLdEntity */
  export interface JsonLdEntity {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
}

",
    "fileExtension": ".ts",
    "fileName": "Api",
  },
]
`;

exports[`JSON-LD basic test > should handle JSON-LD entities with context 1`] = `
[
  {
    "fileContent": "

  /** JSON-LD Entity: Person */
  export interface Person {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: {
  /**
   * name
   * Property: name
   */
    name?: string,
  /**
   * email
   * Property: email
   */
    email?: string,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: ,

},
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * email
   * Property: email
   */
    email?: Record<string,any>,
  /**
   * birthDate
   * Property: birthDate
   */
    birthDate?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: Organization */
  export interface Organization {
  /**
   * type
   * Property: type
   */
    type?: string,
  /**
   * x-jsonld
   * Property: x-jsonld
   */
    "x-jsonld"?: boolean,
  /**
   * x-jsonld-context
   * Property: x-jsonld-context
   */
    "x-jsonld-context"?: string,
  /**
   * x-jsonld-type
   * Property: x-jsonld-type
   */
    "x-jsonld-type"?: string,
  /**
   * properties
   * Property: properties
   */
    properties?: {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
  /**
   * name
   * Property: name
   */
    name?: Record<string,any>,
  /**
   * url
   * Property: url
   */
    url?: Record<string,any>,
  /**
   * employees
   * Property: employees
   */
    employees?: Record<string,any>,

},
  /**
   * required
   * Property: required
   */
    required?: (string)[],
}

  /** JSON-LD Entity: JsonLdEntity */
  export interface JsonLdEntity {
  /**
   * @context
   * JSON-LD context defining the meaning of terms
   */
    "@context"?: object,
  /**
   * @type
   * JSON-LD type identifier
   */
    "@type": string,
  /**
   * @id
   * JSON-LD identifier (IRI)
   */
    "@id"?: string,
}

",
    "fileExtension": ".ts",
    "fileName": "Api",
  },
]
`;
